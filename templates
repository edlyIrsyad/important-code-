#include <iostream>
using namespace std;

template <class T>
T returnLarger(T in1, T in2)
{
  return(in1 > in2) ? in1 : in2;
}

int main()
{
  int i1, i2;
  float f1, f2;
  char c, C;
  
  cout << returnLarger(i1, i2);
  cout << returnLarger(f1, f2);
  cout << returnLarger(c, C);
}




#include <iostream>
using namespace std;

template <class T>
class Calculator{
  private:
    T n1, n2;
  public:
    Calculator(T in1, in2){
      n1 = in1;
      n2 = in2;
    }
}

int main(){
  
}




template <class T>
class Stack{
  private:
    List<T> list1;
    
  public:
    void push(T);
    T pop();
    bool isEmpty();
};

void Stack<T>::push(T x){
  list1.insertHead(x);
}

T Stack<T>::pop(){
  T item = list1.headItem();
  list1.removeHead();
  return item;
}
